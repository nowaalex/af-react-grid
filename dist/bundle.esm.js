import{DraggableCore as t}from"react-draggable";import s,{Children as e}from"react";import i from"react-dom";import r from"prop-types";import o from"classnames";const n=s.memo(({className:e,type:i,style:r,index:o,onDrag:n,onStart:a,disabled:h,children:c})=>s.createElement(t,{onStart:a,onDrag:n,disabled:h},s.createElement("div",{"data-resizer-index":o,"data-resizer-type":i,className:e,style:r,children:c})));n.propTypes={type:r.oneOf(["row","col"]),onDrag:r.func,onStart:r.func,index:r.number,disabled:r.bool,children:r.node,style:r.object,className:r.string};const a="<|-aFrCtGrD-|>",h={row:{t:"react-rsz-grid-row",s:"pageX",e:"offsetWidth",i:"clientWidth",r:"width",o:"minWidth",n:"maxWidth",a:["Left","Right"]},col:{t:"react-rsz-grid-col",s:"pageY",e:"offsetHeight",i:"clientHeight",r:"height",o:"minHeight",n:"maxHeight",a:["Top","Bottom"]}};class c{constructor(){const t=localStorage.getItem(a);this.h=t?JSON.parse(t):{},window.addEventListener("beforeunload",()=>{Object.keys(this.h).length>1&&localStorage.setItem(a,JSON.stringify(this.h))})}c(t,s){this.h[t]=s}l(t){return this.h[t]||{}}}var l=new c;const m=(t,s=Object.create(null))=>e=>s[e]||(s[e]=t(e)),d=(t,s,e)=>t>e?e:t<s?s:t,p=(t,s,e)=>t.hasOwnProperty(s)?t[s]:e;function f(t){if(!s.isValidElement(t))return t;const{type:e,props:i,key:r}=t,{resizerChildren:o,type:h,localStorageKey:c}=this.props,l=p(this.props,"resizerClassName","react-rsz-grid-default-resizer"),m=this.m;if(e===n)return s.cloneElement(t,{index:m,onDrag:this.d,onStart:this.p,type:h,className:p(i,"className",l)},p(i,"children",o));const d=r||a+m;this.f[m]=d;const f=this.state[d],u={style:i.style?Object.assign({},i.style,f):f,ref:this.g(m)};return e===g&&(u.resizerClassName=p(i,"resizerClassName",l),u.resizerChildren=p(i,"resizerChildren",o),u.localStorageKey=p(i,"localStorageKey",c+"_"+d)),this.m++,s.cloneElement(t,u)}class g extends s.Component{constructor(...t){super(...t),this.state=l.l(this.props.localStorageKey),this.u=[],this.f={},this.p=(t=>{const s=this.y=+t.currentTarget.dataset.resizerIndex,e=this.u[s-1],i=this.u[s];if(e&&i){const{s}=h[this.props.type];this.D=t[s],this.S(e,1),this.S(i,2);const r=this._curD1+this._curD2;this._maxD1||(this._maxD1=r-this._minD2),this._maxD2||(this._maxD2=r-this._minD1),this.N()}else"production"!==process.env.NODE_ENV&&console.warn("Resizer must be between other components. It is inactive during this drag.")}),this.d=(t=>{const s=this.y;if(this.u[s]&&this.u[s-1]){const{s,r:e}=h[this.props.type],i=t[s]-this.D;this.setState(t=>this.z(t,e,i))}}),this.g=m(t=>s=>{this.u[t]=i.findDOMNode(s),"production"===process.env.NODE_ENV||!this.u[t]||this.u[t]instanceof Element||__JEST__||console.error("af-react-grid: can't find ref for component:",s,"ReactDOM.findDomNode must return element for all children of Container.")}),this.w=((t,{type:s})=>{const{r:e,e:i}=h[s];return this.u.reduce((s,r,o)=>{const n=this.f[o];return r&&(s[n]=Object.assign({},t[n],{[e]:r[i],flexBasis:"auto",boxSizing:"border-box"})),s},{})}),this.N=(()=>this.setState(this.w))}S(t,s){const{type:e}=this.props,{n:i,o:r,e:o,i:n,a}=h[e],c=getComputedStyle(t),l=(this["_curD"+s]=t[o])-t[n]+a.reduce((t,s)=>t+parseFloat(c[`padding${s}`]),0);this["_minD"+s]=l+(parseFloat(c[r])||0),this["_maxD"+s]=parseFloat(c[i])||0}b(){const{localStorageKey:t}=this.props;t&&l.c(t,this.state)}z(t,s,e){const i=this.y,r=this.f[i],o=this.f[i-1];return{[o]:Object.assign({},t[o],{[s]:d(this._curD1+e,this._minD1,this._maxD1)}),[r]:Object.assign({},t[r],{[s]:d(this._curD2-e,this._minD2,this._maxD2)})}}render(){const{type:t,className:i,children:r,style:n}=this.props;return this.m=0,s.createElement("div",{style:n,className:o(i,h[t].t),children:e.map(r,f,this)})}componentDidMount(){this._st=setTimeout(this.N,50),window.addEventListener("resize",this.N)}componentDidUpdate(){this.b();const t=this.u.length-this.m;t&&this.u.splice(this.m,t)}componentWillUnmount(){window.removeEventListener("resize",this.N),clearTimeout(this._st)}}g.propTypes={type:r.oneOf(["row","col"]),className:r.string,style:r.object,children:(t,i)=>{if(e.toArray(t[i]).some(t=>s.isValidElement(t)&&t.type===s.Fragment))throw new Error("Fragments are not allowed inside Container, use arrays instead")},resizerChildren:r.node,resizerClassName:r.string,localStorageKey:r.string},g.defaultProps={type:"row"};export{n as Resizer,g as Container};
